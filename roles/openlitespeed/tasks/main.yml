---
- name: install openlitespeed build essentials (apt)  
  apt: name={{item}} state={{installed_package_state}}
  tags:  install_packages
  when: "ansible_pkg_mgr == 'apt'"
  with_items:
    - build-essential 
    - libexpat1-dev 
    - libgeoip-dev 
    - libpng-dev 
    - libpcre3-dev 
    - libssl-dev 
    - libxml2-dev 
    - rcs 
    - zlib1g-dev

- name: download and compile openlitespeed 1 (apt)  
  tags:  install_packages
  file: path=/var/downloads/openlitespeed/ state=directory
  when: "ansible_pkg_mgr == 'apt'"  
  
- name: download and compile openlitespeed 2 (apt)  
  tags:  install_packages
  get_url: url=http://open.litespeedtech.com/packages/openlitespeed-1.3.12.tgz dest=/var/downloads/openlitespeed/openlitespeed-1.3.12.tgz
  when: "ansible_pkg_mgr == 'apt'"  
  
- name: download and compile openlitespeed 3 (apt) 
  tags:  install_packages 
  unarchive: src=/var/downloads/openlitespeed/openlitespeed-1.3.12.tgz dest=/tmp copy=no owner={{ web_user }} group={{ web_group }} creates=/tmp/openlitespeed-1.3.12
  when: "ansible_pkg_mgr == 'apt'"  

- name: download and compile openlitespeed 4 (apt)  
  shell: "{{ item }}"
  with_items:
    - cd /tmp/openlitespeed-1.3.12; ./configure ; ./fixtimestamp.sh; make; make install;
    #There is a shell script fixtimestamp.sh in the root directory of the source code to fix the time stamp issue, so can you try to run it and re-install again?
    #This will install the entire OpenLiteSpeed system under the /usr/local/lsws location.
  when: "ansible_pkg_mgr == 'apt'"


- name: install openlitespeed repository (yum)
  tags:  install_packages
  yum: name=http://rpms.litespeedtech.com/centos/litespeed-repo-1.1-1.el6.noarch.rpm state={{installed_package_state}}
  when: "ansible_pkg_mgr == 'yum'"

- name: install latest stable openlitespeed (yum)
  tags:  install_packages
  yum: name=openlitespeed state={{installed_package_state}}
  when: "ansible_pkg_mgr == 'yum'"

- name: symlink php to openlitespeed php
  action: command ln -sf /usr/bin/lsphp /usr/local/lsws/fcgi-bin/lsphp5
  when: "ansible_pkg_mgr == 'yum'"
  
- name: create vhost dir
  file: path=/usr/local/lsws/vhost state=directory owner={{ web_user }} group={{ web_group }} 
  when: "ansible_pkg_mgr == 'yum'"
  
# - name: chown to vhost dir to suexec user
  # file: owner={{ web_user }} group={{ web_group }} path=/usr/local/lsws/vhost mode=644
  # when: "ansible_pkg_mgr == 'yum'"
  
- name: add lsadm user to  {{ web_group }} 
  user: name={{ item }} groups={{ web_group }} append=yes
  with_items:
     - lsadm
  
- name: backup old phpsuexec template
  action: command mv /usr/local/lsws/conf/templates/phpsuexec.xml /usr/local/lsws/conf/templates/phpsuexec.xml.bak
  when: "ansible_pkg_mgr == 'yum'"
  
- name: copy my optimized phpsuexec template
  template:
    src=phpsuexec.xml.jowy
    dest=/usr/local/lsws/conf/templates/phpsuexec.xml
    owner={{ web_user }} group={{ web_group }}  mode=0644
  when: "ansible_pkg_mgr == 'yum'"
  
- name: start lws
  shell: service lsws start   
# - name: set secure openlitespeed admin password
  # command:  /usr/local/lsws/admin/misc/admpass.sh
  
  #http://server_domain_or_IP:8088
