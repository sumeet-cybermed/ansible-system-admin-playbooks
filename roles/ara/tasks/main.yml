---
- name: Install dependencies via dnf
  dnf: name={{ item }} state={{installed_package_state}}
  with_items:
    - python-pip
    - gcc
    - ansible
    - python-devel
    - libffi-devel
    - openssl-devel
    - redhat-rpm-config
    - python-setuptools
    - tree
    - libselinux-python
  when: ansible_pkg_mgr == 'dnf'

- name: Install dependencies via yum
  yum: name={{ item }} state={{installed_package_state}}
  with_items:
    - gcc
    - python-devel
    - libffi-devel
    - openssl-devel
    - redhat-rpm-config
  when: ansible_distribution == "CentOS" or ansible_distribution == "redhat"

- name: Install dependencies via apt
  apt: name={{ item }} state={{installed_package_state}}
  with_items:
    - gcc
    - python-dev
    - libffi-dev
    - libssl-dev
    - python-pip
    - tree
  when: ansible_pkg_mgr == 'apt'

- name: Install pip
  easy_install: name=pip state={{installed_package_state}}
  when: ansible_pkg_mgr == 'yum'

- name: Install ara
  pip: name={{ item }}
  with_items:
    - ara
    - tox

#sumeet-set in init.sh & ansible.cfg using https://ara.readthedocs.io/en/latest/configuration.html#using-ansible-cfg
#
#- name: Enable ara plugin
#  lineinfile: dest={{ config_path }}
#              line={{ item.line }}
#              insertafter={{ item.insertafter }}
#  with_items:
#    - { line: "callback_plugins = /usr/lib/python2.7/site-packages/ara/callback:$VIRTUAL_ENV/lib/python2.7/site-packages/ara/callback:/usr/local/lib/python2.7/dist-packages/ara/callback", insertafter: "^#? some" }

- name: copy systemd service template
  template: src=ara-service.conf.j2 dest=/etc/systemd/system/ara.service owner=root group=root mode=0644

- name: daemon reload
  shell: systemctl daemon-reload

- name: Enable service
  service: name=ara enabled=yes

- name: start service
  service: name=ara state=started
