vrrp_script chk_haproxy {
    script "pidof haproxy"
    interval 2
}

vrrp_instance public {
    interface {{lb.external_eth_id}}
{% if master is defined %}
    state MASTER
    priority 200
{% else %}
    state BACKUP
    priority 100
{% endif %}

    virtual_router_id 33
    unicast_src_ip {{ lb.internal_bind_address }}
    unicast_peer {
{% for node in groups['cluster'] %}
{% if lb.internal_bind_address != hostvars[node][lb.internal_eth_name]["ipv4"]["address"] %}
    {{ hostvars[node][lb.internal_eth_name]["ipv4"]["address"] }}
{% endif %}
{% endfor %}
    }

    authentication {
        auth_type PASS
        auth_pass {{ lb.auth }}
    }

    virtual_ipaddress {
        {{ lb.external_loadbalanced_ip }}/32 dev {{lb.external_eth_id}}
        {% if lb.external_loadbalanced_ip != lb.internal_loadbalanced_ip and lb.internal_loadbalanced_ip != '' %}
        {{ lb.internal_loadbalanced_ip }}/32 dev {{lb.internal_eth_id}}
        {% endif %}
    }

    track_script {
        chk_haproxy
    }
}

    }

    track_script {
        chk_haproxy
    }
}
