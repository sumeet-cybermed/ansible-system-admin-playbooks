# # Important! The when must occur before any sections in the config file.
# A configuration file will be processed at the time(s) specified by the "when" option. If multiple "when" options are present, then they all apply. If two configurations files are scheduled to run in the same hour, then we fall back on the alphabetical ordering specified above.
# For this reason, if you want to make sure that a particular backup action is processed before another, then you should give them the same "when" value.

# when = sundays at 02:00
# when = 30th at 22
# when = 30 at 22:00
# when = everyday at 01            <-- the default
# when = Tuesday at 05:00
#when = hourly
{% for schedule in backup_schedules.mysql %}
{{schedule}}
{% endfor %}

### backupninja MySQL config file ###

### sumeet this is failing!
# # hotcopy = < yes | no > (default = no)
# # make a backup of the actual database binary files using mysqlhotcopy.
# hotcopy = no

# sqldump = < yes | no > (default = no)
# make a backup using mysqldump. this creates text files with sql commands
# sufficient to recontruct the database.
#
sqldump = yes

# sqldumpoptions = <options>
# (default = --lock-tables --complete-insert --add-drop-table --quick --quote-names)
# arguments to pass to mysqldump
sqldumpoptions = --skip-add-drop-table --flush-logs --flush-privileges --lock-tables  --create-options --dump-date --triggers --routines=true --skip-add-drop-table  --disable-keys  --flush-logs --quote-names 

# compress = < yes | no > (default = yes)
# if yes, compress the sqldump output.
compress = no

# dbhost      = <host> (default = localhost)
dbhost      = localhost

# backupdir = <dir> (default: /var/backups/mysql)
# where to dump the backups. hotcopy backups will be in a subdirectory
# 'hotcopy' and sqldump backups will be in a subdirectory 'sqldump'
backupdir = {{backup_dir_mysql}}

# databases = <all | db1 db2 db3 > (default = all)
# which databases to backup. should either be the word 'all' or a
# space separated list of database names.
databases = all

dbusername = root
dbpassword = {{ mysql_root_secure_password }}

# make the files owned by this user
# note: you must be able to ssh backupuser@backhost
# without specifying a password
# user = {{backup_username}}

