---
# tasks/main.yml: Main tasks for RocketChat.Ansible

  - include_vars: "{{ item }}"
    with_first_found:
      - "{{ ansible_distribution }}.yml"
      - "{{ ansible_os_family }}.yml"
    tags:
      - vars
      - always

  - include: repo_RedHat.yml
    when: ansible_os_family == "RedHat"
    tags:
      - repo
      - always

  - name: Ensure APT cache has been updated recently
    apt:
      update_cache: yes
      #cache_valid_time: 3600
    when: ansible_pkg_mgr == "apt"
    tags:
       - install_packages

  - include: mongodb.yml
    when: rocket_chat_include_mongodb|bool
    tags:
      - mongodb
       - install_packages

  - name: Ensure the Rocket.Chat service group is present
    group:
      name: "{{ rocket_chat_service_group }}"
      state: present
      system: true
    tags:
       - always

  - name: Ensure the Rocket.Chat service user is present
    user:
      comment: Rocket.Chat Service User
      name: "{{ rocket_chat_service_user }}"
      group: "{{ rocket_chat_service_group }}"
      home: "{{ rocket_chat_application_path }}"
      createhome: true
      shell: /bin/false
      state: present
      system: true
    tags:
       - always

  - name: Ensure Rocket.Chat dependencies are installed
    package:
      name: "{{ rocket_chat_dep_packages }}"
      state: present
    retries: 2
    tags:
       - install_packages

  - name: Ensure link /bin/node -> /bin/nodejs exists
    file:
      src: /bin/node
      dest: /bin/nodejs
      state: link
    when: ansible_os_family == "RedHat"
    tags:
       - install_packages

  - name: Ensure n (NodeJS) is installed
    npm:
      name: n
      global: true
      executable: "{{ rocket_chat_original_npm }}"
    tags:
       - install_packages

  - name: Check to see if n has installed the required 'node' binary
    stat:
      path: "{{ rocket_chat_node_10_40_path }}/node"
    register: n_10_40_node_bin
    tags:
       - install_packages

  - name: Install the 0.10.40 NodeJS environment via n
    shell: n 0.10.40
    when: not n_10_40_node_bin.stat.exists|bool
    tags:
       - install_packages

  - name: "Configure /etc/hosts"
    lineinfile:
      dest: /etc/hosts
      line:  "127.0.0.1    {{ ansible_fqdn }}    {{ ansible_hostname }}"
      regexp: '^127.0.0.1'
    when: ansible_virtualization_type != "docker"
    tags:
       - always

  - name: Check to see if this is the initial Rocket.Chat deployment
    stat:
      path: "{{ rocket_chat_application_path }}/bundle"
    register: rocket_chat_deploy_state
    tags:
       - always

  - name: Set the initial Rocket.Chat upgrade status
    set_fact:
      rocket_chat_upgraded: false
    tags:
       - always

  - name: Ensure acl-tools are present [Ubuntu 16]
    package:
      name: acl
      state: present
    when:
      - ansible_distribution == "Ubuntu"
      - ansible_distribution_major_version == "16"
    tags:
       - install_packages

  - name: Fetch the Rocket.Chat binary tarball
    get_url:
      url: "{{ rocket_chat_tarball_remote }}"
      checksum: "{{ (rocket_chat_tarball_check_checksum == false) | ternary(omit, 'sha256: ' + rocket_chat_tarball_sha256sum) }}"
      force: "{{ (rocket_chat_tarball_check_checksum == false) | ternary('yes', omit) }}"
      dest: "{{ rocket_chat_application_path }}/rocket.chat-{{ rocket_chat_version }}.tgz"
      timeout: "{{ rocket_chat_tarball_fetch_timeout }}"
      validate_certs: "{{ rocket_chat_tarball_validate_remote_cert }}"
    # Temp fix for ansible/ansible#15915 ( Broken include in handlers )
    # https://github.com/ansible/ansible/issues/15915
    #notify: Upgrade Rocket.Chat
    become: true
    become_user: "{{ rocket_chat_service_user }}"
    register: result
    retries: 3
    changed_when: (result|changed)
                  or (not rocket_chat_tarball_check_checksum)
    tags:
       - install_packages

  - name: Upgrade Rocket.Chat
    include: upgrade.yml
    when:
      - result|changed
      - rocket_chat_deploy_state.stat.exists
    tags:
      - upgrade
      - install_packages

  - meta: flush_handlers
    tags:
       - always

  - name: Unpack the Rocket.Chat binary tarball
    unarchive:
      copy: false
      src: "{{ rocket_chat_application_path }}/rocket.chat-{{ rocket_chat_version }}.tgz"
      dest: "{{ rocket_chat_application_path }}"
      creates: "{{ rocket_chat_application_path }}/bundle"
    become: true
    become_user: "{{ rocket_chat_service_user }}"
    tags:
       - build
       - install_packages

  - name: Install Rocket.Chat via NPM
    npm:
      state: present
      path: "{{ rocket_chat_application_path }}/bundle/programs/server"
      executable: "{{ rocket_chat_original_npm }}"
    become: true
    become_user: "{{ rocket_chat_service_user }}"
    tags:
       - build
       - install_packages

  - name: Ensure the Rocket.Chat log file symlink is present [Ubuntu 14]
    file:
      path: /var/log/rocketchat.log
      src: /var/log/upstart/rocketchat.log
      state: link
      force: yes
    when:
      - ansible_distribution == "Ubuntu"
      - ansible_distribution_major_version == "14"
    tags:
       - always

  - name: Ensure the Rocket.Chat application data permissions are correct
    file:
      path: "{{ rocket_chat_application_path }}"
      state: directory
      owner: "{{ rocket_chat_service_user }}"
      group: "{{ rocket_chat_service_user }}"
      recurse: true
    tags:
       - build
       - install_packages

  - include_vars: "{{ item }}"
    with_first_found:
      - "{{ ansible_distribution }}_{{ ansible_distribution_major_version }}.yml"
      - "{{ ansible_os_family }}_{{ ansible_distribution_major_version }}.yml"
      - "{{ ansible_distribution }}.yml"
      - "{{ ansible_os_family }}.yml"
    tags:
       - service
       - always

  - name: Deploy the Rocket.Chat service file
    template:
      src: "{{ rocket_chat_service_template.src }}"
      dest: "{{ rocket_chat_service_template.dest }}"
    notify:
      - Update the Rocket.Chat service configuration
      - Restart the Rocket.Chat service
    tags:
       - service
       - always

  - meta: flush_handlers
    tags:
       - always

  - name: Ensure the MongoDB replSets have been initiated
    shell: >-
      mongo --eval 'rs.initiate()' &&
      touch .mongo_rs_initialised
    become: yes
    become_user: mongodb
    args:
      chdir: /var/lib/mongodb
      creates: /var/lib/mongodb/.mongo_rs_initialised
    when: rocket_chat_include_mongodb|bool
    tags:
       - service
       - always

  - name: Restart the Rocket.Chat service [UPGRADE]
    service:
      name: rocketchat
      state: restarted
    when: rocket_chat_upgraded|bool
    tags:
       - service
       - always

  - name: Ensure the Rocket.Chat service is running/enabled
    service:
      name: rocketchat
      state: started
      enabled: true
    tags:
       - service
       - always

  - include: nginx.yml
    when: rocket_chat_include_nginx|bool or True
    tags:
      - nginx
      - always
