---
## Installation options
redis_as_service: true

redis_service_name: "redis"
redis_sentinel_service_name: "redis-sentinel"

redis_version: 2.8.9
redis_install_dir: /opt/redis
redis_user: redis
redis_working_dir: /var/lib/redis/{{ redis_service_name }}
redis_tarball: false
# The open file limit for Redis/Sentinel
redis_nofile_limit: 16384

## Networking/connection options

redis_tcp_backlog: 511
redis_tcp_keepalive: 0

#sumeet- redis conf file path
redis_conf_file: "/etc/redis.conf"
redis_setinel_conf_file: "/etc/redis-sentinel.conf"
# Max connected clients at a time
redis_maxclients: 10000
redis_timeout: 0
# Socket options
# Set socket_path to the desired path to the socket. E.g. /var/run/redis/{{ redis_listen_port }}.sock
redis_socket_path: false
redis_socket_perm: 755

## Replication options
# Set slaveof just as you would in redis.conf. (e.g. "redis01 6379")

# Make slaves read-only. "yes" or "no"
redis_slave_read_only: "yes"
#
redis_slave_priority: 100
redis_repl_backlog_size: false

## Logging
redis_logfile: "/var/log/redis/{{ redis_listen_port }}.log"
# Enable syslog. "yes" or "no"                                                  
redis_syslog_enabled: "yes"                                                     
redis_syslog_ident: redis_{{ redis_listen_port }}
# Syslog facility. Must be USER or LOCAL0-LOCAL7                                
redis_syslog_facility: USER   

## General configuration
redis_daemonize: "yes"                                                          
redis_pidfile: /var/run/redis/{{ redis_listen_port }}.pid
# Number of databases to allow
redis_databases: 16
redis_loglevel: notice
# Log queries slower than this many milliseconds. -1 to disable
redis_slowlog_log_slower_than: 10000
# Maximum number of slow queries to save
redis_slowlog_max_len: 128
# Redis memory limit (e.g. 4294967296, 4096mb, 4gb)
redis_maxmemory: 256mb
redis_maxmemory_policy: noeviction
redis_rename_commands: []
# How frequently to snapshot the database to disk
# e.g. "900 1" => 900 seconds if at least 1 key changed
redis_save:
  - 900 1
  - 300 10
  - 60 10000
redis_appendonly: "no"
redis_appendfilename: "appendonly.aof"
redis_appendfsync: "everysec"
redis_no_appendfsync_on_rewrite: "no"
redis_auto_aof_rewrite_percentage: "100"
redis_auto_aof_rewrite_min_size: "64mb"

## Redis sentinel configs

#redis_sentinel: set in inventory file gainst host
redis_sentinel: false

##used to setup server as master or slave basded on whether this variable is defined
redis_slaveof: "{% if cluster_master is defined or not is_part_of_cluster %}{% else %}{{ hostvars['cluster_master'].ansible_host }}{% endif %}" #{{lb.internal_bind_address}}is not coming accurately and return eth0 in virtualbox

redis_sentinel_working_dir: /var/lib/redis/{{redis_sentinel_service_name}}
redis_sentinel_listen_addr: 0.0.0.0
redis_sentinel_listen_port: 26379
redis_sentinel_pidfile: /var/run/redis/{{redis_sentinel_service_name}}.pid
redis_sentinel_logfile: "/var/log/redis/{{ redis_listen_port }}.log"
redis_sentinel_syslog_ident: "{{redis_sentinel_service_name}}"
redis_failover_timeout: 60000

redis_sentinel_monitors:
  - name: cluster_master
    host: "{{cluster_master_ip_addr}}" #{{lb.internal_bind_address}}is not coming accurately and return eth0 in virtualbox
    port: "{{redis_listen_port}}"
    quorum: 1
    auth_pass: "{{redis_auth_password}}"
    down_after_milliseconds: 30000
    parallel_syncs: 1
    notification_script: false
    client_reconfig_script: false
    failover_timeout: "{{redis_failover_timeout}}"
