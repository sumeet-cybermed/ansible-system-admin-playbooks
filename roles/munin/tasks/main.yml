---
- name: Include OS-specific variables.
  tags: ['always']
  include_vars: "{{ ansible_os_family }}.yml"

- name: Install required packages for munin (RedHat).
  yum: "name={{ item }} state={{installed_package_state}}"
  tags:  install_packages
  with_items: munin_packages
  when: ansible_os_family == 'RedHat'

- name: Install required packages for munin (Debian).
  tags:  install_packages
  apt: "name={{ item }} state={{installed_package_state}}"
  with_items: munin_packages
  when: ansible_os_family == 'Debian'

- name: Copy munin configurations.
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - src: munin.conf
      dest: /etc/munin/munin.conf
    - src: munin-node.conf
      dest: /etc/munin/munin-node.conf
   

- name: Enable or disable the munin cron job.
  lineinfile:
    dest: /etc/cron.d/munin
    state: "{{ munin_cron_job }}"
    regexp: "^\\*/5 \\* \\* \\* \\*"
    line: "*/5 * * * *     munin test -x /usr/bin/munin-cron && /usr/bin/munin-cron"
    
- name: enable munin plugins
  file: 
    dest: /etc/munin/plugins/{{item}}
    src: /usr/share/munin/plugins/{{item}} 
    state: link
    owner: root
    group: root
  with_items:
    - nginx_request
    - nginx_status

- name: enable and restart munin node service
  service:
    name: munin-node
    enabled: true
    state: restarted    
    
- name: Set up admin virtual host  
  template: src=etc/nginx/conf.d/munin.conf dest=/etc/nginx/conf.d/munin.conf owner=root group=root mode=0644
  notify: nginx reload
  
